{"expireTime":9007200873188680000,"key":"transformer-remark-markdown-html-6d73f32f7c14702edfc49102e077c9b9-gatsby-remark-imagesgatsby-remark-external-linksgatsby-remark-prismjs-","val":"<h1>README</h1>\n<h1>creando proyecto</h1>\n<p>rails new -example_RoR-jwt.apirestauthentication --api</p>\n<h1>configuraciones que gemfile debe tener</h1>\n<ul>\n<li>gem 'bcrypt', '~> 3.1.7' //enable</li>\n<li>gem 'jwt' //add</li>\n<li>gem 'rack-cors' //enalbe</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">bundle install</code></pre></div>\n<h1>BD</h1>\n<p>debe usar la base de datos de su preferencia , yo usare sqlite<br>\nrails db:create &#x26;&#x26; rails db:migrate</p>\n<h1>file CORS</h1>\n<ul>\n<li>EDITAR -> config/initializers/cors.rb</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Rails.application.config.middleware.insert_before 0, Rack::Cors do\n  allow do\n    origins &#39;*&#39;\n\n    resource &#39;*&#39;,\n      headers: :any,\n      methods: [:get, :post, :put, :patch, :delete, :options, :head]\n  end\nend</code></pre></div>\n<h1>file routes</h1>\n<ul>\n<li>EDITAR -> config/routes.rb</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Rails.application.routes.draw do\n  resource :users, only: [:create]\n  post &#39;/login&#39;, to: &#39;users#login&#39;\n  get &#39;/auto_login&#39;, to: &#39;users#auto_login&#39;\n  post &#39;/register&#39;, to: &#39;users#create&#39;\nend</code></pre></div>\n<h1>scaffold para API = rails g resources X</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">rails generate resource User username:string password_digest:string\nrails db:migrate</code></pre></div>\n<h1>seguridad modelo</h1>\n<ul>\n<li>EDITAR -> app/models/user.rb</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class User &lt; ApplicationRecord\n    has_secure_password\nend</code></pre></div>\n<h1>seeds</h1>\n<ul>\n<li>EDITAR -> db/seeds.rb</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">user = User.create(username: &quot;freddy&quot;, password: &quot;pTKM&amp;^9x2#&quot;)</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">rails db:seed</code></pre></div>\n<h1>agregar seguridad controlador principal</h1>\n<ul>\n<li>EDITAR -> app/controllers/application_controller.rb</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class ApplicationController &lt; ActionController::API\n    before_action :authorized\n\n  def encode_token(payload)\n    JWT.encode(payload, &#39;yourSecret&#39;)\n  end\n\n  def auth_header\n    # { Authorization: &#39;Bearer &lt;token&gt;&#39; }\n    request.headers[&#39;Authorization&#39;]\n  end\n\n  def decoded_token\n    if auth_header\n      token = auth_header.split(&#39; &#39;)[1]\n      # header: { &#39;Authorization&#39;: &#39;Bearer &lt;token&gt;&#39; }\n      begin\n        JWT.decode(token, &#39;yourSecret&#39;, true, algorithm: &#39;HS256&#39;)\n      rescue JWT::DecodeError\n        nil\n      end\n    end\n  end\n\n  def logged_in_user\n    if decoded_token\n      user_id = decoded_token[0][&#39;user_id&#39;]\n      @user = User.find_by(id: user_id)\n    end\n  end\n\n  def logged_in?\n    !!logged_in_user\n  end\n\n  def authorized\n    render json: { message: &#39;Please log in&#39; }, status: :unauthorized unless logged_in?\n  end\nend</code></pre></div>\n<h1>user controller</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class UsersController &lt; ApplicationController\n  before_action :authorized, only: [:auto_login]\n\n  # REGISTER\n  def create\n    @user = User.create(user_params)\n    if @user.valid?\n      token = encode_token({user_id: @user.id})\n      render json: {user: @user, token: token}\n    else\n      render json: {error: &quot;Invalid username or password&quot;}\n    end\n  end\n\n  # LOGGING IN\n  def login\n    @user = User.find_by(username: params[:username])\n\n    if @user &amp;&amp; @user.authenticate(params[:password])\n      token = encode_token({user_id: @user.id})\n      render json: {user: @user, token: token}\n    else\n      render json: {error: &quot;Invalid username or password&quot;}\n    end\n  end\n\n\n  def auto_login\n    render json: @user\n  end\n\n  private\n\n  def user_params\n    params.permit(:username, :password, :age)\n  end\n\nend</code></pre></div>\n<h1>guia test en POSTMAN</h1>\n<ul>\n<li>REGISTER</li>\n</ul>\n<p>POST -> localhost:3000/register\nbody -> raw -> { \"username\":\"alfredo\", \"password\" : \"PassworsUPERS3CRET4\"}</p>\n<ul>\n<li>entrega token</li>\n</ul>\n<p>{\n\"user\": \"#&#x3C;User:0x000000012efcfe20>\",\n\"token\": \"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo0fQ.3BbRA0X8L4RCsF8-r4w6HrL4hFQKeGz6OQ522OyH57I\"\n}</p>\n<ul>\n<li>LOGIN</li>\n</ul>\n<p>Post -> localhost:3000/login\nbody -> raw -> { \"username\" : \"freddy\", \"password\" : \"Wd12XCZ.12312!%!>123!&#x3C;@#!XxxXaxa\" }</p>\n<ul>\n<li>entrega toekn</li>\n</ul>\n<p>{\n\"user\": \"#&#x3C;User:0x000000012e9e2f08>\",\n\"token\": \"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyfQ.4aV9sPAQmgK4hTBPihEXF3CVkzLDz3jsmWShy2TtQfU\"\n}</p>\n<ul>\n<li>AUTO LOGIN</li>\n</ul>\n<p>GET -> localhost:3000/auto_login\nHeaders -> Autorization -> bearer [token]</p>\n<ul>\n<li>entrega autenticacion</li>\n</ul>\n<p>{\n\"id\": 2,\n\"username\": \"freddy\",\n\"password<em>digest\": \"$2a$12$4JN5xZDrhfL9baT6vqsu2ebrHDxawW30aEBjvWjajbwew3B1Zk/S.\",\n\"created</em>at\": \"2021-02-24T19:10:07.339Z\",\n\"updated_at\": \"2021-02-24T19:10:07.339Z\"<br>\n}</p>\n<hr>\n<hr>\n<hr>\n<h1>Elementos que un usuario pueda administrar</h1>\n<ul>\n<li>rails generate scaffold note message:string user:references</li>\n<li>revisar relacion de los modelos , belong ,has_many</li>\n<li>editar el controlador</li>\n<li>POSTMAN , ya logeado revisar tus notas<br>\nGET -> localhost:3000/notes<br>\nHeaders -> Autorization -> bearer [token]</li>\n<li>POSTMAN , crear una nota nueva\nPOST -> localhost:3000/notes<br>\nbody -> raw -> { \"message\":\"hola mundo!\", \"user_id\" : \"1\"}</li>\n</ul>\n<p>se pueden registrar varios usuarios\nse pueden logear varios usuarios\nlos usuarios pueden crear sus notas\nlos usuarios pueden ver sus notas\nlos usuarios pueden actualizar una nota [no aun]\nlos usuarios pueden eliminar una nota [no aun]</p>\n<p>guia base de alexmercedcoder\n<a href=\"https://tuts.alexmercedcoder.com/2020/ruby-tut/\" target=\"_blank\" rel=\"nofollow\">https://tuts.alexmercedcoder.com/2020/ruby-tut/</a></p>"}
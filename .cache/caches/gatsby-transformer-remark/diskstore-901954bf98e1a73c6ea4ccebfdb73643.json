{"expireTime":9007200874721774000,"key":"transformer-remark-markdown-html-6aa729627a4c93cf4e839fbbfb259796-gatsby-remark-imagesgatsby-remark-external-linksgatsby-remark-prismjs-","val":"<pre>\n\nlas ramas|||||||||||||||||||\nmaster rama = por defecto\ncrear rama = git checkout -b version3\ngit checkout master = ir a rama principal\ngit push origin version3 = habilita y pushea a una rama\n\nsobre escribir desde el REPO a mi carpeta LOCAL?|||||||||||||||||||||\npor protocolo git no permite sobre 'escribir'\ngit lo reusara\nsi el directorio esta vacio lo deberia llenar (borrar .git)\n\ninidicar a github que ESTE repo Local es el mismo que el repo Remoto=======\ngit remote add origin 'elotrorepo'\n\nCLONAR repo ========================\ngit clone ruta.git destino\n\nsubir CAMBIOS=======================\ngit add .\ngit commit -m \"agrege comandos git\"\ngit push origin master\n\nsubir cambios a REPO existente y VACIO===========\ngit init\ngit add .\ngit commit -m \"sda\"\ngit remote add origin \"https\"\ngit push -u origin master\n\nactualizarme a la ultima version=============\ngit pull\n\ncomo debo hacer merge/rebase?============================\nen rama master :\nen rama freddy:\nen rama erik :\n\ngit checkout master\ngit rebase erik\ngit rebase freddy\n\nmerge o rebase???? ambas combinana N a 1\nmerge no muestra el codigo y sus cambios a detalle\nrebase se muestra el codigo editado a detalle / subir archivo editado al final , subir archivo recien editado\nrebase insertar su contenido al final de la linea del master.\n\ncomandos generales//\ngit log /ver historial\ngit log -p /ver historial\ngit brach / para ver ramas\ngit checkout -b / crear y cambiar rama\ngit status / ver ultimos cambiso de archivo inlcuso en local\ngit branch -d 'rama' / borra esa rama\ngit remote -v /ver a que repo esta contectado mi repo local\ngit remote remove -v /remueve el Vinculo del Repo Remoto\ngit fork /copia el repo cuando no es de mi grupo ni mio , D:\n\nextras//\ngit worflows en grupos\n\nOMAR-------------------------sube\ngit add .\ngit commit -m \"acabo de subir un header nuevo para el inicio'\ngit push origin master\nusuario y contrase√±a\n\nFILI------------------- actualiza\ngit remote add origin 'direccion del repo'\ngit fetch origin\ngit merge origin/master\n\nsi tenemos un manual merge------------------- arreglarlo manual\nborrar o elegir un archivo\n\n</pre>\n<ul>\n<li><code class=\"language-text\">git init</code> se crea un area en la RAM</li>\n<li><code class=\"language-text\">git add</code> los archivos se van a stagging</li>\n<li><code class=\"language-text\">git commit</code> envia Cambios al repositorio local 'es un save? de seguridad'</li>\n<li>git remoto ? <code class=\"language-text\">gitlab</code> , <code class=\"language-text\">github</code></li>\n<li><code class=\"language-text\">git push</code> enviar los cambios al repositorio Remoto</li>\n<li><code class=\"language-text\">git pull</code> traer cambios del repo remoto al repo local y ademas al directorio de trabajo</li>\n<li>\n<p><code class=\"language-text\">checkout</code> traer cambios de una rama</p>\n<ul>\n<li><code class=\"language-text\">master</code></li>\n<li><code class=\"language-text\">desarrollo</code></li>\n<li><code class=\"language-text\">hotfixing</code></li>\n</ul>\n</li>\n<li><code class=\"language-text\">merge</code> union de ramas (crea un commit al mismo tiempo)</li>\n<li><code class=\"language-text\">git status</code> para ver lo que pasa actualmente en este git</li>\n<li><code class=\"language-text\">git log</code> todos los commits existentes</li>\n<li><code class=\"language-text\">git diff</code> comparar las versiones</li>\n</ul>\n<p>cambiar entre versiones\ngit checkout xxxx\ngit checkout master</p>\n<ul>\n<li><code class=\"language-text\">git reset xxxx --hard</code> sobreescrib el commit actual</li>\n<li><code class=\"language-text\">git reset xxxx --soft</code> conserva el commit actual</li>\n<li>\n<p>ramas en commits</p>\n<ul>\n<li><code class=\"language-text\">master</code> el principal que tiene historias de los commits</li>\n<li><code class=\"language-text\">head</code> indica el commit actual en el que trabajas</li>\n<li>-</li>\n</ul>\n</li>\n<li>git <code class=\"language-text\">branch minuevarama</code></li>\n<li>git <code class=\"language-text\">checkout minuevarama</code></li>\n</ul>\n<p>si estoy en master\ncreare una nueva rama para hacer cambios\notro programador creara otra rama para hacer otros cambios</p>\n<p>todos los cambios no se conectan por lo que\nregreso a la rama master y desde la rama master\nhacer merge con rama1 y rama2</p>\n<p>merge staging : es una seccion existente cuando falla un merge por conflictos entre 2 partes.</p>\n<p>//github</p>\n<p>git clone para usar el git pero no puedo actualizar si no es mi repo\ngit</p>\n<p>git pull origin master ? traer de internet al master\ngit push origin master ? manda desde origin al master\ngit push origin header ? manda desde el origin al header</p>\n<p>header indica nuestra posicion actual</p>\n<p>git pull origin footer , para traer del repo una rama en especifica</p>"}
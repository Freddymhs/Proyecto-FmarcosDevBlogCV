{"expireTime":9007200878885515000,"key":"transformer-remark-markdown-html-34e9dc050993e31ac5774630ba4941b0-gatsby-remark-imagesgatsby-remark-external-linksgatsby-remark-prismjs-","val":"<h1>Donde Descargar Python</h1>\n<p><a href=\"https://www.python.org/\" target=\"_blank\" rel=\"nofollow\">https://www.python.org/</a> e instalar :)</p>\n<h1>Como revisar si esta Instalado</h1>\n<ul>\n<li>\n<p>en la consola.\n<code class=\"language-text\">python</code> - Para salir de python\n<code class=\"language-text\">exit</code></p>\n<h1>Cosas Basicas</h1>\n<p><code class=\"language-text\">archivo PYC?</code> Este es el bytecode/archivo compilado<br>\n<code class=\"language-text\">Tipo de lenguaje</code> Es un lenguaje <strong>Intepretado</strong> de ** Alto Nivel** osea mas amigable al programdor</p>\n</li>\n</ul>\n<h1>Algunas diferencias con Javascrip, <strong><em>segun yo</em></strong></h1>\n<p><code class=\"language-text\">En Python puedo declarar muchas varaibles en solo 1 Linea.</code></p>\n<p><code class=\"language-text\">Las Constantes se declara asi: NOMBRE , siempre en mayuscula</code></p>\n<p><code class=\"language-text\">LISTAS</code> son como el array con mayor cantidad de funciones disponibles , ej ordenarlos a la inversa</p>\n<ul>\n<li>\n<p>.</p>\n<ul>\n<li>Obtener parte de una lista : <code class=\"language-text\">0:3</code> estas 4</li>\n<li>Invertir la lista invertir la lista completa <code class=\"language-text\">::0</code></li>\n<li>Buscar elemento por su <code class=\"language-text\">index(posicion)</code></li>\n<li>crear matrizes jutando 2 arrays en 1 nueva</li>\n<li>se puede convertir a una tupla</li>\n</ul>\n</li>\n</ul>\n<p><code class=\"language-text\">TUPLAS</code></p>\n<ul>\n<li>\n<p>.</p>\n<ul>\n<li>son como listas pero son INMUTABLES <code class=\"language-text\">no cambian</code></li>\n<li>se declaran con <code class=\"language-text\">()</code></li>\n<li>se puede convertir a una lista</li>\n</ul>\n</li>\n</ul>\n<p><code class=\"language-text\">metodos para el control</code></p>\n<ul>\n<li>\n<p>.</p>\n<ul>\n<li>Existe un metodo find() para buscar en una cadena</li>\n<li>Existe un metodo count() cotibilziar el texto en la variable</li>\n</ul>\n</li>\n</ul>\n<p><code class=\"language-text\">DICCIONARIOS</code></p>\n<ul>\n<li>\n<p>.</p>\n<ul>\n<li>similar a lo anterior pero usan KEYS</li>\n<li>las keys permiten acceso a la informacion</li>\n<li>.get('key') regresara la llave</li>\n<li>.se puede crear diccionario dentro de una 'Key' o mas bien su posicion a la que aputa esta key.</li>\n<li>podemos obtener solo los items con .items()</li>\n<li>podemos obtener solo los keys con .keys()</li>\n<li>podemos contar todos los elementos con len(diccionario)</li>\n<li>podemos borrar con del diccionario['key'] o tambien con la funcion pop</li>\n<li>EXISTEN funciones para escribir numeros impares facilmente</li>\n</ul>\n</li>\n</ul>\n<p><code class=\"language-text\">en Python tambien</code></p>\n<ul>\n<li>.</li>\n<li>podemos asignar Variables 'MIENTRAS' esta en ejecucion el if</li>\n<li>las funciones se definen con DEF nombre<em>de</em>mi_funcion</li>\n<li>se puede definir una *propiedad o *argumentos de funcion por si no sabemos cuantos params llegaran a la funcion</li>\n<li>una variable sera local o global dependiendo donde se crea <strong>en la funcion , o fuera</strong></li>\n</ul>\n<p><code class=\"language-text\">expresion LAMBDA?</code></p>\n<ul>\n<li>.</li>\n<li>son funciones ANONIMAS que se ejecutan en 1 sola linea y desaparecen , me recuerda al arrow function.</li>\n</ul>\n<p><code class=\"language-text\">yield</code></p>\n<ul>\n<li>.</li>\n<li>una forma de RETORNAR resultado de la funcion <strong>SIN terminarla</strong> como un break</li>\n</ul>\n<p><code class=\"language-text\">clases</code></p>\n<ul>\n<li>.</li>\n<li>las clases en python se definen con la palabra class</li>\n<li>existen metodos y atributos como siempre dentro de las funciones</li>\n<li>instanciar con class object que es igual el metodo simple <strong>class</strong>, solo que esta muestra que hereda de una clase.</li>\n</ul>\n<p><code class=\"language-text\">funcioines</code></p>\n<ul>\n<li>.</li>\n<li>la funcion la puedo definir con <strong>def</strong></li>\n</ul>\n<p><code class=\"language-text\">ademas</code></p>\n<ul>\n<li>existe Herencias y Herencias multiples</li>\n<li>se puede sobreescribir los metodos</li>\n</ul>\n<p><code class=\"language-text\">trabajar con modulos?</code></p>\n<ul>\n<li>como en javascript esto es posible y nos ayuda a reusar estos 'componentes/modulos'</li>\n<li>import miarchivo y luego podemos acceder a miarchivo.saludar(params)</li>\n<li>from miarchivo import *</li>\n</ul>\n<p><code class=\"language-text\">como trabajar con PACKAGES?</code></p>\n<ul>\n<li>basicamente es como los modulos</li>\n<li>\n<p>folder.archivo import clase</p>\n<ul>\n<li><strong>init</strong>.py <code class=\"language-text\">puede ser un archivo principal desde donde se exponen otras clases asi se simplifica</code></li>\n<li>este es un patron de dise√±o de buenas practicas</li>\n</ul>\n</li>\n</ul>"}